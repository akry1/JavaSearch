All features of a class can be obtained via reflection, including access to private methods & variables. But not always see [1]. Let us look at the following example:<br /><br /><br /><br />Code listing 10.3: Secret.java<br /><br /><br />1 public class Secret {<br />2   private String secretCode = "It's a secret";<br />3  <br />4   private String getSecretCode() {<br />5     return secretCode;     <br />6   }<br />7 }<br /><br /><br /><br /><br />Although the field and method are marked private, the following class shows that it is possible to access the private features of a class:<br /><br /><br /><br /><br /><br /><br />Code listing 10.4: Hacker.java<br /><br /><br /> 1 import java.lang.reflect.Field;<br /> 2 import java.lang.reflect.InvocationTargetException;<br /> 3 import java.lang.reflect.Method;<br /> 4  <br /> 5 public class Hacker {<br /> 6  <br /> 7    private static final Object[] EMPTY = {};<br /> 8  <br /> 9    public void reflect() throws IllegalAccessException, IllegalArgumentException, InvocationTargetException {<br />10      Secret instance = new Secret();<br />11      Class<?> secretClass = instance.getClass();<br />12  <br />13      // Print all the method names & execution result<br />14      Method methods[] = secretClass.getDeclaredMethods();<br />15      System.out.println("Access all the methods");<br />16      for (Method method : methods) {<br />17         System.out.println("Method Name: " + method.getName());<br />18         System.out.println("Return type: " + method.getReturnType());<br />19         method.setAccessible(true);<br />20         System.out.println(method.invoke(instance, EMPTY) + "\n");<br />21      }<br />22  <br />23      // Print all the field names & values<br />24      Field fields[] = secretClass.getDeclaredFields();<br />25      System.out.println("Access all the fields");<br />26      for (Field field : fields) {<br />27         System.out.println("Field Name: " + field.getName());<br />28         field.setAccessible(true);<br />29         System.out.println(field.get(instance) + "\n");<br />30      }<br />31   }<br />32  <br />33   public static void main(String[] args) {<br />34     Hacker newHacker = new Hacker();<br />35  <br />36     try {<br />37       newHacker.reflect();<br />38     } catch (Exception e) {<br />39       e.printStackTrace();<br />40     }<br />41   }<br />42 }<br /><br /><br /><br /><br /><br /><br /><br /><br /><br />Console for Code listing 10.4<br /><br />Access all the methods<br />Method Name: getSecretCode<br />Return type: class java.lang.String<br />It's a secret<br />Access all the fields<br />Field Name: secretCode<br />It's a secret<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />To do:<br />We need to add some explanation of what is going on here.