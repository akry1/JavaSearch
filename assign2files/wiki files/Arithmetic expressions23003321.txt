In order to do arithmetic in Java, one must first declare at least one variable. Typically one declares a variable and assigns it a value before any arithmetic is done. Here's an example of declaring an integer variable:<br /><br /><br /><br />Code section 3.59: Variable assignation.<br /><br /><br />1 int x = 5;<br /><br /><br /><br /><br />After creating a variable, one can manipulate its value by using Java's operators: + (addition), - (subtraction), * (multiplication), / (integer division), % (modulo or remainder), ++ (pre- & postincrement by one), -- (pre- & postdecrement by one).<br /><br /><br /><br /><br /><br /><br />Code listing 3.10: Operators.java<br /><br /><br /> 1 public class Operators {<br /> 2   public static void main(String[] args) {<br /> 3     int x = 5;<br /> 4     System.out.println("x = " + x);<br /> 5     System.out.println();<br /> 6    <br /> 7     System.out.println("--- Addition             ---");<br /> 8     x = 5;<br /> 9     System.out.println("x + 2 = " + (x + 2));<br />10     System.out.println("x = " + x);<br />11     System.out.println();<br />12    <br />13     System.out.println("--- Subtraction          ---");<br />14     x = 5;<br />15     System.out.println("x - 4 = " + (x - 4));<br />16     System.out.println("x = " + x);<br />17     System.out.println();<br />18    <br />19     System.out.println("--- Multiplication       ---");<br />20     x = 5;<br />21     System.out.println("x * 3 = " + (x * 3));<br />22     System.out.println("x = " + x);<br />23     System.out.println();<br />24    <br />25     System.out.println("--- (Integer) Division   ---");<br />26     x = 5;<br />27     System.out.println("x / 2 = " + (x / 2));<br />28     System.out.println("x = " + x);<br />29     System.out.println();<br />30    <br />31     System.out.println("--- Modulo (Remainder)   ---");<br />32     x = 5;<br />33     System.out.println("x % 2 = " + (x % 2));<br />34     System.out.println("x = " + x);<br />35     System.out.println();<br />36    <br />37     System.out.println("--- Preincrement by one  ---");<br />38     x = 5;<br />39     System.out.println("++x   = " + (++x  ));<br />40     System.out.println("x = " + x);<br />41     System.out.println();<br />42    <br />43     System.out.println("--- Predecrement by one  ---");<br />44     x = 5;<br />45     System.out.println("--x   = " + (--x  ));<br />46     System.out.println("x = " + x);<br />47     System.out.println();<br />48    <br />49     System.out.println("--- Postincrement by one ---");<br />50     x = 5;<br />51     System.out.println("x++   = " + (x++  ));<br />52     System.out.println("x = " + x);<br />53     System.out.println();<br />54    <br />55     System.out.println("--- Postdecrement by one ---");<br />56     x = 5;<br />57     System.out.println("x--   = " + (x--  ));<br />58     System.out.println("x = " + x);<br />59     System.out.println();<br />60   }<br />61 }<br /><br /><br /><br /><br /><br /><br /><br /><br /><br />Console for Code listing 3.10<br /><br />x = 5<br /><br />--- Addition             ---<br />x + 2 = 7<br />x = 5<br /><br />--- Subtraction          ---<br />x - 4 = 1<br />x = 5<br /><br />--- Multiplication       ---<br />x * 3 = 15<br />x = 5<br /><br />--- (Integer) Division   ---<br />x / 2 = 2<br />x = 5<br /><br />--- Modulo (Remainder)   ---<br />x % 2 = 1<br />x = 5<br /><br />--- Preincrement by one  ---<br />++x   = 6<br />x = 6<br /><br />--- Predecrement by one  ---<br />--x   = 4<br />x = 4<br /><br />--- Postincrement by one ---<br />x++   = 5<br />x = 6<br /><br />--- Postdecrement by one ---<br />x--   = 5<br />x = 4<br /><br /><br /><br /><br /><br /><br />The division operator rounds towards zero: 5/2 is 2, and -5/2 is -2. The remainder operator has the same sign as the left operand; it is defined such that ((a/b)*b) + (a%b) is always equal to a. The preincrement, predecrement, postincrement, and postdecrement operators are special: they also change the value of the variable, by adding or subtracting one. The only difference is that preincrement/decrement returns the new value of the variable; postincrement returns the original value of the variable.<br /><br />Test your knowledge<br /><br />Question 3.8: Consider the following code:<br /><br /><br /><br />Question 3.8: Question8.java<br /><br /><br /> 1 public class Question8 {<br /> 2   public static void main(String[] args) {<br /> 3     int x = 10;<br /> 4     x = x + 10;<br /> 5     x = 2 * x;<br /> 6     x = x - 19;<br /> 7     x = x / 3;<br /> 8     System.out.println(x);<br /> 9   }<br />10 }<br /><br /><br /><br /><br />What will be printed in the standard output?<br /><br />Answer<br /><br /><br /><br /><br />Output for Question 3.8<br /><br />7<br /><br /><br /><br />int x = 10; => 10<br />x = x + 10; => 20<br />x = 2 * x; => 40<br />x = x - 19; => 21<br />x = x / 3; => 7<br /><br /><br /><br /><br />When using several operators in the same expression, one must consider Java's order of precedence. Java uses the standard PEMDAS (Parenthesis, Exponents, Multiplication and Division, Addition and Subtraction) order. When there are multiple instances of the same precedence, Java reads from left to right. Consider what the output of the following code would be:<br /><br /><br /><br /><br /><br /><br />Code section 3.60: Several operators.<br /><br /><br />1 System.out.println(10*5 + 100/10 - 5 + 7%2);<br /><br /><br /><br /><br /><br /><br /><br /><br /><br />Console for Code section 3.60<br /><br />56<br /><br /><br /><br /><br /><br /><br />The following chart shows how Java would compute this expression:<br /><br /><br /><br /><br />Figure 3.1: Computation of an arithmetic expression in the Java programming language<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />Besides performing mathematical functions, there are also operators to assign numbers to variables (each example again uses the variable initialized as x = 5):<br /><br /><br /><br /><br /><br /><br />Code listing 3.11: Assignments.java<br /><br /><br /> 1 public class Assignments {<br /> 2   public static void main(String[] args) {<br /> 3     int x = 5;<br /> 4     x = 3;<br /> 5     System.out.println("Assignment                                       (x = 3) : " + x);<br /> 6 <br /> 7     x = 5;<br /> 8     x += 5;<br /> 9     System.out.println("Assign x plus another integer to itself          (x += 5): " + x);<br />10 <br />11     x = 5;<br />12     x -= 4;<br />13     System.out.println("Assign x minus another integer to itself         (x -= 4): " + x);<br />14 <br />15     x = 5;<br />16     x *= 6;<br />17     System.out.println("Assign x multiplied by another integer to itself (x *= 6): " + x);<br />18 <br />19     x = 5;<br />20     x /= 5;<br />21     System.out.println("Assign x divided by another integer to itself    (x /= 5): " + x);<br />22   }<br />23 }<br /><br /><br /><br /><br /><br /><br /><br /><br /><br />Console for Code listing 3.11<br /><br />Assignment                                       (x = 3) : 3<br />Assign x plus another integer to itself          (x += 5): 10<br />Assign x minus another integer to itself         (x -= 4): 1<br />Assign x multiplied by another integer to itself (x *= 6): 30<br />Assign x divided by another integer to itself    (x /= 5): 1