The code listing 3.7 recieves a number as parameter and print its binary representation.<br /><br /><br /><br />Code listing 3.7: GetBinary.java<br /><br /><br /> 1 public class GetBinary {<br /> 2     public static void main(String[] args) {<br /> 3         if (args.length == 0) {<br /> 4             // Print usage<br /> 5             System.out.println("Usage: java GetBinary <decimal integer>");<br /> 6             System.exit(0);<br /> 7         } else {<br /> 8             // Print arguments<br /> 9             System.out.println("Received " + args.length + " arguments.");<br />10             System.out.println("The arguments are:");<br />11             for (String arg : args) {<br />12                 System.out.println("\t" + arg);<br />13             }<br />14         }<br />15 <br />16         int number = 0;<br />17         String binary = "";<br />18 <br />19         // Get the input number<br />20         try {<br />21             number = Integer.parseInt(args[0]);<br />22         } catch (NumberFormatException ex) {<br />23             System.out.println("Error: argument must be a base-10 integer.");<br />24             System.exit(0);<br />25         }<br />26 <br />27         // Convert to a binary string<br />28         do {<br />29             switch (number % 2) {<br />30                 case 0: binary = '0' + binary; break;<br />31                 case 1: binary = '1' + binary; break;<br />32             }<br />33             number >>= 1;<br />34         } while (number > 0);<br />35 <br />36         System.out.println("The binary representation of " + args[0] + " is " + binary);<br />37     }<br />38 }<br /><br /><br /><br /><br />The code listing 3.8 is a simulation of playing a game called Lucky Sevens. It is a dice game where the player rolls two dice. If the numbers on the dice add up to seven, he wins $4. If they do not, he loses $1. The game shows how to use control flow in a program as well as the fruitlessness of gambling.<br /><br /><br /><br />Code listing 3.8: LuckySevens.java<br /><br /><br /> 1 import java.util.*;<br /> 2 <br /> 3 public class LuckySevens {<br /> 4     public static void main(String[] args) {<br /> 5         Scanner in = new Scanner(System.in);<br /> 6         Random random = new Random();<br /> 7         String input;<br /> 8         int startingCash, cash, maxCash, rolls, roll;<br /> 9 <br />10         // Loop until "quit" is input<br />11         while (true) {<br />12             System.out.print("Enter the amount of cash to start with (or \"quit\" to quit): ");<br />13 <br />14             input = in.nextLine();<br />15 <br />16             // Check if user wants to exit<br />17             if (input.toLowerCase().equals("quit")) {<br />18                 System.out.println("\tGoodbye.");<br />19                 System.exit(0);<br />20             }<br />21 <br />22             // Get number<br />23             try {<br />24                 startingCash = Integer.parseInt(input);<br />25             } catch (NumberFormatException ex) {<br />26                 System.out.println("\tPlease enter a positive integer greater than 0.");<br />27                 continue;<br />28             }<br />29 <br />30             // You have to start with some money!<br />31             if (startingCash <= 0) {<br />32                 System.out.println("\tPlease enter a positive integer greater than 0.");<br />33                 continue;<br />34             }<br />35 <br />36             cash = startingCash;<br />37             maxCash = cash;<br />38             rolls = 0;<br />39             roll = 0;<br />40 <br />41             // Here is the game loop<br />42             for (; cash > 0; rolls++) {<br />43                roll = random.nextInt(6) + 1;<br />44                roll += random.nextInt(6) + 1;<br />45 <br />46                 if (roll == 7)<br />47                     cash += 4;<br />48                 else<br />49                     cash -= 1;<br />50 <br />51                 if (cash > maxCash)<br />52                     maxCash = cash;<br />53             }<br />54 <br />55             System.out.println("\tYou start with $" + startingCash + ".\n"<br />56                     + "\tYou peak at $" + maxCash + ".\n"<br />57       + "\tAfter " + rolls + " rolls, you run out of cash.");<br />58         }<br />59     }<br />60 }<br /><br /><br /><br /><br /><br /><br /><br /> Conditional blocks<br />Java Programming<br />Loop blocks<br />Boolean expressions