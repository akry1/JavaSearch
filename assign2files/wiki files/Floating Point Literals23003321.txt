Floating point numbers are expressed as decimal fractions or as exponential notation:<br /><br /><br /><br />Code section 3.63: Floating point literals.<br /><br /><br />1 double decimalNumber = 5.0;<br />2 decimalNumber = 5d;<br />3 decimalNumber = 0.5;<br />4 decimalNumber = 10f;<br />5 decimalNumber = 3.14159e0;<br />6 decimalNumber = 2.718281828459045D;<br />7 decimalNumber = 1.0e-6D;<br /><br /><br /><br /><br />Floating point numbers consist of:<br /><br />an optional leading + or - sign, indicating a positive or negative value; if omitted, the value is positive,<br />one of the following number formats<br /><br />integer digits (must be followed by either an exponent or a suffix or both, to distinguish it from an integer literal)<br />integer digits .<br />integer digits . integer digits<br />. integer digits<br /><br /><br />an optional exponent of the form<br /><br />the exponent indicator e or E<br />an optional exponent sign + or - (the default being a positive exponent)<br />integer digits representing the integer exponent value<br /><br /><br />an optional floating point suffix:<br /><br />either f or F indicating a single precision (4 bytes) floating point number, or<br />d or D indicating the number is a double precision floating point number (by default, thus the double precision (8 bytes) is default).<br /><br /><br /><br />Here, integer digits represents one or more of the digits 0 through 9.<br />Starting in J2SE 7.0, you may insert underscores between digits in a numeric literal. They are ignored but may help readability by allowing the programmer to group digits.