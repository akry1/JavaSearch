Objects put into a collection are upcasted to Object class. It means that you need to cast the object reference back when you get an element out from the collection. It also means that you need to know the type of the object when you take it out. If a collection contains different types of objects, we will have difficulty finding out the type of the objects obtained from a collection at run time. Let's use a collection with any objects in it:<br /><br /><br /><br />Code section 5.1: Collection feeding.<br /><br /><br />1 Collection ageList = new ArrayList();<br />2 ageList.add(new Integer(46));<br />3 ageList.add("50");<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />Code section 5.2: Collection reading.<br /><br /><br />1 Integer sum = new Integer(0);<br />2 for (Object age : ageList) {<br />3     sum = sum.add((Integer) age);<br />4 }<br />5 <br />6 if (!ageList.isEmpty()) {<br />7     System.out.println("The average age is " + sum / ageList.size());<br />8 }<br /><br /><br /><br /><br /><br /><br /><br /><br /><br />Console for Code section 5.2<br /><br />ClassCastException.<br /><br /><br /><br /><br /><br /><br />This error could have been fixed earlier, at compile time, using generic types.<br />The Generics has been added since JDK version 1.5. It is an enhancement to the type system of the Java language. All collection implementations since 1.5 now have one parameterized type <E> added. The E refers to an Element type. When a collection is created, the actual Element type will replace the E. In the collection, the objects are now upcasted to E class.<br /><br /><br /><br />Code section 5.3: Collection with generics.<br /><br /><br />1 Collection<Integer> ageList = new ArrayList<Integer>();<br />2 ageList.add(new Integer(46));     // Integer can be added<br />3 ageList.add("50");                // Compilation error, ageList can have only Integers inside<br /><br /><br /><br /><br /><br />ageList is a collection that can contain only Integer objects as elements. No casting is required when we take out an element.<br /><br /><br /><br />Code section 5.4: Item reading.<br /><br /><br />1 Integer age = ageList.get(0);<br /><br /><br /><br /><br />Generics is not mandatory but it is often used with the collection classes.