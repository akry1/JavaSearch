The if ... else statement is used to conditionally execute one of two blocks of statements, depending on the result of a boolean condition.<br />Example:<br /><br /><br /><br />Code section 3.12: An if/else statement.<br /><br /><br />1 if (list == null) {<br />2   // This block of statements executes if the condition is true.<br />3 } else {<br />4   // This block of statements executes if the condition is false.<br />5 }<br /><br /><br /><br /><br />Oracle's Java Code Conventions recommend that the braces should always be used.<br />An if statement has two forms:<br /><br />if (boolean-condition)<br />   statement1<br /><br />and<br /><br />if (boolean-condition)<br />   statement1<br />else<br />   statement2<br /><br />Use the second form if you have different statements to execute if the boolean-condition is true or if it is false. Use the first if you only wish to execute statement1 if the condition is true and you do not wish to execute alternate statements if the condition is false.<br />The code section 3.13 calls two int methods, f() and y(), stores the results, then uses an if statement to test if x is less than y and if it is, the statement1 body will swap the values. The end result is x always contains the larger result and y always contains the smaller result.<br /><br /><br /><br />Code section 3.13: Value swap.<br /><br /><br />1 int x = f();<br />2 int y = y();<br />3 if (x < y) {<br />4   int z = x;<br />5   x = y;<br />6   y = z;<br />7 }<br /><br /><br /><br /><br />if...else statements also allow for the use of another statement, else if. This statement is used to provide another if statement to the conditional that can only be executed if the others are not true. For example:<br /><br /><br /><br />Code section 3.14: Multiple branching.<br /><br /><br />1 if (x == 2)<br />2   x = 4;<br />3 else if (x == 3)<br />4   x = 6;<br />5 else<br />6   x = -1;<br /><br /><br /><br /><br />The else if statement is useful in this case because if one of the conditionals is true, the other must be false. Keep in mind that if one is true, the other will not execute. For example, if the statement at line 2 contained in the first conditional were changed to x = 3;, the second conditional, the else if, would still not execute. However, when dealing with primitive types in conditional statements, it is more desirable to use switch statements rather than multiple else if statements.