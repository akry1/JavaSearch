A JNI environment pointer (JNIEnv*) is passed as an argument for each native function mapped to a Java method, allowing for interaction with the JNI environment within the native method. This JNI interface pointer can be stored, but remains valid only in the current thread. Other threads must first call AttachCurrentThread() to attach themselves to the VM and obtain a JNI interface pointer. Once attached, a native thread works like a regular Java thread running within a native method. The native thread remains attached to the VM until it calls DetachCurrentThread() to detach itself.<br />To attach to the current thread and get a JNI interface pointer:<br /><br />JNIEnv *env;<br />(*g_vm)->AttachCurrentThread (g_vm, (void **) &env, NULL);<br /><br />To detach from the current thread:<br /><br />(*g_vm)->DetachCurrentThread (g_vm);