Keywords are special tokens in the language which have reserved use in the language. Keywords may not be used as identifiers in Java â€” you cannot declare a field whose name is a keyword, for instance.<br />Examples of keywords are the primitive types, int and boolean; the control flow statements for and if; access modifiers such as public, and special words which mark the declaration and definition of Java classes, packages, and interfaces: class, package, interface.<br />Below are all the Java language keywords:<br /><br /><br />abstract<br />assert (since Java 1.4)<br />boolean<br />break<br />byte<br />case<br />catch<br />char<br />class<br />const (not used)<br />continue<br />default<br />do<br />double<br />else<br />enum (since Java 5.0)<br />extends<br />final<br />finally<br />float<br />for<br />goto (not used)<br />if<br />implements<br />import<br />instanceof<br />int<br />interface<br />long<br />native<br />new<br />package<br />private<br />protected<br />public<br />return<br />short<br />static<br />strictfp (since Java 1.2)<br />super<br />switch<br />synchronized<br />this<br />throw<br />throws<br />transient<br />try<br />void<br />volatile<br />while<br /><br /><br /><br /><br /><br /><br /><br />Contents<br /><br /><br />1 abstract<br />2 assert<br />3 boolean<br />4 break<br />5 byte<br />6 case<br />7 catch<br />8 char<br />9 class<br />10 const<br />11 continue<br />12 See also<br />13 default<br />14 do<br />15 double<br />16 else<br />17 enum<br />18 extends<br />19 final<br />20 For a variable<br />21 For a class<br />22 For a method<br />23 Interest<br />24 finally<br />25 float<br />26 for<br />27 goto<br />28 if<br />29 implements<br />30 import<br />31 instanceof<br />32 int<br />33 interface<br />34 long<br />35 native<br />36 See also<br />37 new<br />38 package<br />39 private<br />40 protected<br />41 public<br />42 return<br />43 short<br />44 static<br />45 Interest<br />46 strictfp<br />47 super<br />48 switch<br />49 synchronized<br />50 Singleton example<br />51 this<br />52 throw<br />53 throws<br />54 transient<br />55 try<br />56 void<br />57 volatile<br />58 while<br /><br /><br /><br /><br /><br />In addition, the identifiers null, true, and false denote literal values and may not be used to create identifiers.