It can be said that the execution order of the threads was manipulated to some degree using the Thread.sleep(...) method. The Thread class has such static methods that can arguably affect the execution order and manipulation of threads. Below are some useful static methods in the Thread class. These methods when called will only affect the currently running threads.<br /><br /><br />Method<br />Description<br /><br /><br />Thread.currentThread()<br />Returns the currently executing thread at any given time.<br /><br /><br />Thread.dumpStack()<br />Prints a stack trace of the currently running thread.<br /><br /><br />Thread.sleep(long millis)<br />Halts execution of the currently running thread for the given amount of time (in milliseconds).<br />throws InterruptedException<br /><br /><br />Thread.sleep(long millis, int nanos)<br />Halts execution of the currently running thread for the given amount of time (in milliseconds plus provided nanoseconds).<br />throws InterruptedException<br /><br /><br />Thread.yield()<br />Temporarily pauses the execution of the currently running thread to allow other threads to execute.