Methods are how we communicate with objects. When we invoke or call a method we are asking the object to carry out a task. We can say methods implement the behaviour of objects. For each method we need to give a name, we need to define its input parameters and we need to define its return type. We also need to set its visibility (private, protected or public). If the method throws an Exception, that needs to be declared as well. It is called a method definition. The syntax of method definition is: class MyClass {<br /><br /> ...<br /> public ReturnType methodName(ParamOneType parameter1,<br />             ParamTwoType parameter2)<br />   throws ExceptionName {<br />     ReturnType returnType;<br />     ...<br />     return returnType;<br />   }<br /> ...<br /><br />}<br />We can declare that the method does not return anything using the void Java keyword. For example:<br /><br /><br /><br />Code section 3.67: Method without returned data.<br /><br /><br />1 private void methodName(String parameter1, String parameter2) {<br />2   ...<br />3   return;<br />4 }<br /><br /><br /><br /><br />When the method returns nothing, the return keyword at the end of the method is optional. When the execution flow reaches the return keyword, the method execution is stopped and the execution flow returns to the caller method. The return keyword can be used anywhere in the method as long as there is a way to execute the instructions below:<br /><br /><br /><br />Code section 3.68: return keyword location.<br /><br /><br /> 1 private void aMethod(int a, int b) {<br /> 2   int c = 0;<br /> 3   if (a > 0) {<br /> 4     c = a;<br /> 5     return;<br /> 6   }<br /> 7   int c = c + b;<br /> 8   return;<br /> 9   int c = c * 2;<br />10 }<br /><br /><br /><br /><br />In the code section 3.68, the return keyword at line 5 is well placed because the instructions below can be reached when a is negative or equal to 0. However, the return keyword at line 8 is badly placed because the instructions below can't be reached.<br /><br />Test your knowledge<br /><br />Question 3.9: Consider the following code:<br /><br /><br /><br />Question 3.9: Compiler error.<br /><br /><br />1 private int myMethod(int a, int b, boolean c) {<br />2   b = b + 2;<br />3   if (a > 0) {<br />4     a = a + b;<br />5     return a;<br />6   } else {<br />7     a = 0;<br />8   }<br />9 }<br /><br /><br /><br /><br />The code above will return a compiler error. Why?<br /><br />Answer<br /><br /><br /><br /><br />Answer 3.9: Compiler error.<br /><br /><br />1 private int myMethod(int a, int b, boolean c) {<br />2   b = b + 2;<br />3   if (a > 0) {<br />4     a = a + b;<br />5     return a;<br />6   } else {<br />7     a = 0;<br />8   }<br />9 }<br /><br /><br /><br /><br />The method is supposed to return a int but when a is negative or equal to 0, it returns nothing.