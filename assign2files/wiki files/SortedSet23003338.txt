The SortedSet interface is the same as the Set interface plus the elements in the SortedSet are sorted. It extends the Set Interface. All elements in the SortedSet must implement the Comparable Interface, furthermore all elements must be mutually comparable.<br />Note that the ordering maintained by a sorted set must be consistent with equals if the sorted set is to correctly implement the Set interface. This is so because the Set interface is defined in terms of the equals operation, but a sorted set performs all element comparisons using its compare method, so two elements that are deemed equal by this method are, from the standpoint of the sorted set, equal.<br />The SortedSet interface has additional methods due to the sorted nature of the 'Set'. Those are:<br /><br /><br />E first();<br />returns the first element<br /><br /><br />E last();<br />returns the last element<br /><br /><br />SortedSet headSet(E toElement);<br />returns from the first, to the exclusive toElement<br /><br /><br />SortedSet tailSet(E fromElement);<br />returns from the inclusive fromElement to the end<br /><br /><br />SortedSet subSet(E fromElement, E toElement);<br />returns elements range from fromElement, inclusive, to toElement, exclusive. (If fromElement and toElement are equal, the returned sorted set is empty.)