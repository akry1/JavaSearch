Stack Trace is a list of method calls from the point when the application was started to the point where the exception was thrown. The most recent method calls are at the top.<br /><br /><br /><br /><br /><br /><br />Code listing 6.3: StackTraceExample.java<br /><br /><br /> 1 public class StackTraceExample {<br /> 2   public static void main(String[] args) {<br /> 3     method1();<br /> 4   }<br /> 5 <br /> 6   public static void method1() {<br /> 7     method11();<br /> 8   }<br /> 9 <br />10   public static void method11() {<br />11     method111();<br />12   }<br />13 <br />14   public static void method111() {<br />15     throw new NullPointerException("Fictitious NullPointerException");<br />16   }<br />17 }<br /><br /><br /><br /><br /><br /><br /><br /><br /><br />Output for Code listing 6.3<br /><br />Exception in thread "main" java.lang.NullPointerException: Fictitious NullPointerException<br />at StackTraceExample.method111(StackTraceExample.java:15)<br />at StackTraceExample.method11(StackTraceExample.java:11)<br />at StackTraceExample.method1(StackTraceExample.java:7)<br />at StackTraceExample.main(StackTraceExample.java:3)<br /><br /><br /><br /><br /><br /><br />The stack trace can be printed to the standard error by calling the public void printStackTrace() method of an exception.<br />From Java 1.4, the stack trace is encapsulated into an array of a java class called java.lang.StackTraceElement. The stack trace element array returned by Throwable.getStackTrace() method. Each element represents a single stack frame. All stack frames except for the one at the top of the stack represent a method invocation. The frame at the top of the stack represents the execution point at which the stack trace was generated. Typically, this is the point at which the throwable corresponding to the stack trace was created.<br />A stack frame represents the following information:<br /><br /><br /><br />Code section 6.24: Stack frame.<br /><br /><br />1 public StackTraceElement(String declaringClass,<br />2                          String methodName,<br />3                          String fileName,<br />4                          int lineNumber);<br /><br /><br /><br /><br />Creates a stack trace element representing the specified execution point.