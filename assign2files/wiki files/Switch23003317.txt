The switch conditional statement is basically a shorthand version of writing many if...else statements. The switch block evaluates a char, byte, short, or int (or enum, starting in J2SE 5.0; or String, starting in J2SE 7.0), and, based on the value provided, jumps to a specific case within the switch block and executes code until the break command is encountered or the end of the block. If the switch value does not match any of the case values, execution will jump to the optional default case.<br />The structure of a switch statement is as follows:<br /><br /><br />switch (int1 or char1 or short1 or byte1 or enum1 or String value1) {<br /><br />case case value1:<br /><br />statement1.1<br />...<br />statement1.n<br />break;<br /><br /><br />case case value2:<br /><br />statement2.1<br />...<br />statement2.n<br />break;<br /><br /><br />default:<br /><br />statementn.1<br />...<br />statementn.n<br /><br /><br /><br />}<br /><br /><br /><br />Here is an example to illustrate:<br /><br /><br /><br /><br /><br /><br />Code section 3.26: A switch block.<br /><br /><br /> 1 int i = 3;<br /> 2 switch(i) {<br /> 3     case 1:<br /> 4         // i doesn't equal 1, so this code won't execute<br /> 5         System.out.println("i equals 1");<br /> 6         break;<br /> 7     case 2:<br /> 8         // i doesn't equal 2, so this code won't execute<br /> 9         System.out.println("i equals 2");<br />10         break;<br />11     default:<br />12         // i has not been handled so far, so this code will execute<br />13         System.out.println("i equals something other than 1 or 2");<br />14 }<br /><br /><br /><br /><br /><br /><br /><br /><br /><br />Output for code section 3.26<br /><br />i equals something other than 1 or 2<br /><br /><br /><br /><br /><br /><br />If a case does not end with the break statement, then the next case will be checked, otherwise the execution will jump to the end of the switch statement.<br />Look at this example to see how it's done:<br /><br /><br /><br /><br /><br /><br />Code section 3.27: A switch block containing a case without break.<br /><br /><br /> 1 int i = -1;<br /> 2 switch(i) {<br /> 3     case -1:<br /> 4     case 1:<br /> 5         // i is -1, so it will fall through to this case and execute this code<br /> 6         System.out.println("i is 1 or -1");<br /> 7         break;<br /> 8     case 0:<br /> 9         // The break command is used before this case, so if i is 1 or -1, this will not execute<br />10         System.out.println("i is 0");<br />11 }<br /><br /><br /><br /><br /><br /><br /><br /><br /><br />Output for code section 3.27<br /><br />i is 1 or -1<br /><br /><br /><br /><br /><br /><br />Starting in J2SE 5.0, the switch statement can also be used with an enum value instead of an integer.<br />Though enums have not been covered yet, here is an example so you can see how it's done (note that the enum constants in the cases do not need to be qualified with the type:<br /><br /><br /><br /><br /><br /><br />Code section 3.28: A switch block with an enum type.<br /><br /><br /> 1 Day day = Day.MONDAY; // Day is a fictional enum type containing the days of the week<br /> 2 switch(day) {<br /> 3     case MONDAY:<br /> 4         // Since day == Day.MONDAY, this statement will execute<br /> 5         System.out.println("Mondays are the worst!");<br /> 6         break;<br /> 7     case TUESDAY:<br /> 8     case WEDNESDAY:<br /> 9     case THURSDAY:<br />10         System.out.println("Weekdays are so-so.");<br />11         break;<br />12     case FRIDAY:<br />13     case SATURDAY:<br />14     case SUNDAY:<br />15         System.out.println("Weekends are the best!");<br />16         break;<br />17 }<br /><br /><br /><br /><br /><br /><br /><br /><br /><br />Output for code section 3.28<br /><br />Mondays are the worst!<br /><br /><br /><br /><br /><br /><br />Starting in J2SE 7.0, the switch statement can also be used with an String value instead of an integer.<br /><br /><br /><br /><br /><br /><br />Code section 3.29: A switch block with a String type.<br /><br /><br /> 1 String day = "Monday";<br /> 2 switch(day) {<br /> 3     case "Monday":<br /> 4         // Since day == "Monday", this statement will execute<br /> 5         System.out.println("Mondays are the worst!");<br /> 6         break;<br /> 7     case "Tuesday":<br /> 8     case "Wednesday":<br /> 9     case "Thursday":<br />10         System.out.println("Weekdays are so-so.");<br />11         break;<br />12     case "Friday":<br />13     case "Saturday":<br />14     case "Sunday":<br />15         System.out.println("Weekends are the best!");<br />16         break;<br />17     default:<br />18         throw new IllegalArgumentException("Invalid day of the week: " + day);<br />19 }<br /><br /><br /><br /><br /><br /><br /><br /><br /><br />Output for code section 3.29<br /><br />Mondays are the worst!<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /> Statements<br />Java Programming<br />Conditional blocks<br />Loop blocks