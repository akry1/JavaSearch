Synchronization is important when you are running several threads. Beware, synchronization does not mean that your collection is thread-safe. A thread-safe collection is also called a concurrent collection. Most of the popular collection classes have implementations for both single thread and multiple thread environments. The non-synchronized implementations are always faster. You can use the non-synchronized implementations in multiple thread environments, when you make sure that only one thread updates the collection at any given time.<br />A new Java JDK package was introduced at Java 1.5, that is java.util.concurrent. This package supplies a few Collection implementations designed for use in multi-threaded environments.<br />The following table lists all the synchronized collection classes:<br /><br /><br /><br />synchronized<br />non-synchronized<br /><br /><br />List<br />java.util.Vector<br />java.util.ArrayList<br /><br /><br />java.util.Stack<br /><br /><br /><br /><br />java.util.LinkedList<br /><br /><br />java.util.concurrent.CopyOnWriteArrayList<br /><br /><br /><br />Set<br /><br />java.util.TreeSet<br /><br /><br /><br />java.util.HashSet<br /><br /><br /><br />java.util.LinkHashSet<br /><br /><br />java.util.concurrent.CopyOnWriteArraySet