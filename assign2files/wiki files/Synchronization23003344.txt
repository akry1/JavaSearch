The text in its current form is incomplete.<br /><br /><br />Given below is an example of creating and running multiple threads that behave in a synchronous manner such that when one thread is using a particular resource, the others wait until the resource has been released. We will talk more about this in later sections.<br /><br /><br /><br />Code listing 4: Creation of the multiple Thread objects running synchronously<br /><br /><br />public class MultiThreadExample {<br />    public static boolean cthread;<br />    public static String stuff = " printing material";<br /><br />    public static void main(String args[]) {<br />        Thread t1 = new Thread(new RunnableProcess());<br />        Thread t2 = new Thread(new RunnableProcess());<br />        t1.setName("Thread-1");<br />        t2.setName("Thread-2");<br />        t2.start();<br />        t1.start();<br />    }<br />    /*<br />     * Prints information about the current thread and the index it is<br />     * on within the RunnableProcess<br />     */<br />    public static void printFor(int index) {<br />        StringBuffer sb = new StringBuffer();<br />        sb.append(Thread.currentThread().getName()).append(stuff);<br />        sb.append(" for the ").append(index).append(" time.");<br />        System.out.print(sb.toString());<br />    }<br />}<br />class RunnableProcess implements Runnable {<br />    public void run() {<br />        for(int i = 0; i < 10; i++) {<br />            synchronized(MultiThreadExample.stuff) {<br />                MultiThreadExample.printFor(i);<br />                try {<br />               	    MultiThreadExample.stuff.notifyAll();<br />                    MultiThreadExample.stuff.wait();<br />                } catch(InterruptedException ex) {<br />                   ex.printStackTrace();<br />                }<br />            }<br />        }<br />    }<br />}<br /><br /><br /><br /><br /><br /><br /><br />Output for code listing 4<br /><br />Thread-1 printing material for the 0 time.<br />Thread-2 printing material for the 0 time.<br />Thread-1 printing material for the 1 time.<br />Thread-2 printing material for the 1 time.<br />Thread-1 printing material for the 2 time.<br />Thread-2 printing material for the 2 time.<br />Thread-1 printing material for the 3 time.<br />Thread-2 printing material for the 3 time.<br />Thread-1 printing material for the 4 time.<br />Thread-2 printing material for the 4 time.<br />Thread-1 printing material for the 5 time.<br />Thread-2 printing material for the 5 time.<br />Thread-1 printing material for the 6 time.<br />Thread-2 printing material for the 6 time.<br />Thread-1 printing material for the 7 time.<br />Thread-2 printing material for the 7 time.<br />Thread-1 printing material for the 8 time.<br />Thread-2 printing material for the 8 time.<br />Thread-1 printing material for the 9 time.<br />Thread-2 printing material for the 9 time.