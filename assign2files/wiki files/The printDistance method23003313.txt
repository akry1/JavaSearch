The printDistance() method prints the distance between the two points to the standard output (normally the console).<br /><br /><br /><br />Code section 2.6: printDistance() method.<br /><br /><br />1 public void printDistance() {<br />2   System.out.println("Distance between " + point0<br />3     + " and " + point1<br />4     + " is " + point0.distance(point1));<br />5 }<br /><br /><br /><br /><br />This instance method executes within the context of an implicit Distance object. The instance field references, point0 and point1, refer to instance fields of that implicit object. You can also use the special variable this to explicitly reference the current object. Within an instance method, Java binds the name this to the object on which the method is executing, and the type of this is that of the current class. The body of the printDistance method could also be coded as<br /><br /><br /><br />Code section 2.7: Explicit instance of the current class.<br /><br /><br />1   System.out.println("Distance between " + this.point0<br />2     + " and " + this.point1<br />3     + " is " + this.point0.distance(this.point1));<br /><br /><br /><br /><br />to make the instance field references more explicit.<br />This method both computes the distance and prints it in one statement. The distance is computed with point0.distance(point1); distance() is an instance method of the java.awt.Point class (of which point0 and point1 are instances). The method operates on point0 (binding this to the object that point0 refers to during the execution of the method) and accepting another Point as a parameter. Actually, it is slightly more complicated than that, but we'll explain later. The result of the distance() method is a double precision floating point number.<br />This method uses the syntax<br /><br /><br /><br />Code section 2.8: String concatenation.<br /><br /><br />1  "Distance between " + this.point0<br />2  + " and " + this.point1<br />3  + " is " + this.point0.distance(this.point1)<br /><br /><br /><br /><br />to construct a String to pass to the System.out.println(). This expression is a series of String concatenation methods which concatenates Strings or the String representation of primitive types (such as doubles) or objects, and returns a long string. For example, the result of this expression for the points (0,3) and (4,0) is the String<br /><br /><br /><br />Output<br /><br />"Distance between java.awt.Point[x=0,y=3] and java.awt.Point[x=4,y=0] is 5.0"<br /><br /><br /><br />which the method then prints to System.out.<br />In order to print, we invoke the println(). This is an instance method from java.io.PrintStream, which is the type of the static field out in the class java.lang.System. The Java VM binds System.out to the standard output stream when it starts a program.