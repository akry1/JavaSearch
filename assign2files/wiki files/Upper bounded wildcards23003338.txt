You can specify a restriction on the types of classes that may be used. For example, <? extends ClassName> only allows objects of class ClassName or a subclass. For example, to create a collection that may only contain "Serializable" objects, specify:<br /><br /><br /><br />Code section 4.40: Collection of serializable subobjects.<br /><br /><br />1 Collection<String> textColl = new ArrayList<String>();<br />2 <br />3 Collection<? extends Serializable> serColl = textColl;<br /><br /><br /><br /><br />The above code is valid because the String class is serializable. Use of a class that is not serializable would cause a compilation error. The added items can be retrieved as Serializable object. You can call methods of the Serializable interface or cast it to String. The following collection can only contain objects that extend the class Animal.<br /><br /><br /><br />Code listing 4.38: Dog.java<br /><br /><br />1 class Dog extends Animal {<br />2 }<br /><br /><br /><br /><br /><br /><br /><br />Code section 4.41: Example of subclass.<br /><br /><br />1 // Create "Animal Collection" variable<br />2 Collection<? extends Animal> animalColl = new ArrayList<Dog>();