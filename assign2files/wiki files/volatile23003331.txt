volatile is a keyword.<br />When member variables are marked with this keyword, it changes the runtime behavior in a way that is noticeable when multiple threads access these variables. Without the volatile keyword, one thread could observe another thread update member variables in an order that is not consistent with what is specified in sourcecode. Unlike the synchronized keyword, concurrent access to a volatile field is allowed.<br />Syntax:<br /><br />private volatile <member-variable>;<br />or <br />volatile private <member-variable>;<br /><br /><br />For example:<br /><br /><br /><br /><br /><br /><br />private volatile changingVar;<br /><br /><br /><br /><br /><br />See also:<br /><br />Java Programming/Keywords/synchronized